# Licensed under a 3-clause BSD style license - see LICENSE.rst

import pytest
import numpy as np
import numpy.testing as npt
import pytest_check as check


from skimage import transform

from astropop.image_processing.register import (translate, create_fft_shift_list, 
                                                create_chi2_shift_list, apply_shift, 
                                                apply_shift_list, hdu_shift_images)


exptm2 = np.array([[1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 2., 1., 1., 1., 1., 1., 0, 0],
                   [1., 2., 4., 2., 1., 1., 1., 1., 0, 0],
                   [1., 1., 2., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0],
                   [1., 1., 1., 1., 1., 1., 1., 1., 0, 0]])

exptm1 = np.array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 2., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 2., 4., 2., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 2., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
                   [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])

expt0 = np.array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 2., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 2., 4., 2., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 2., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                  [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])

exptp1 =   np.array([[0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1.5, 1.5, 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1.5, 3. , 3. , 1.5, 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1.5, 1.5, 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.],
                     [0., 1. , 1., 1. , 1. , 1. , 1. , 1. , 1., 1.]])

exptp2 = np.array([[0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 2., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 2., 4., 2., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 2., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                   [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])


@pytest.mark.parametrize(('shift, test_result'), [((0,2),exptm2), ((1,1),exptm1), 
                                                ((0,0),expt0), ((0,-1.5),exptp1),
                                                ((1,-2),exptp2)])
def test_translate(shift, test_result):
    
    dat1 = np.array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 2., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 2., 4., 2., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 2., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                      [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
    
    calculated = translate(dat1, shift)
        
    npt.assert_array_equal(calculated, test_result) 

# @pytest.mark.parametrize('r', [2, 3, 4])
def test_create_fft_shift_list():
    pass

# @pytest.mark.parametrize('r', [2, 3, 4])
def test_create_chi2_shift_list():
    pass

# @pytest.mark.parametrize('r', [2, 3, 4])
def test_apply_shift():
    pass

# @pytest.mark.parametrize('r', [2, 3, 4])
def test_apply_shift_list():
    pass

# @pytest.mark.parametrize('r', [2, 3, 4])
def test_hdu_shift_images():
    #nunca utilizado, testar com cuidado
    pass

