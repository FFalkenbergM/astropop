name: Coverage With Conda-Forge
# Run a single test to determine and upload coverage.
# Using conda to include astrometry

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
  workflow_dispatch:

jobs:
  coverage:
    name: ${{ matrix.toxenv }}
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[ci skip]'))"
    env:
      ASTROPOP_TEST_CATALOGS: 1
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: true
        auto-update-conda: true
        channels: conda-forge,defaults
        python-version: "3.10"
    - name: Install dependencies
      run: |
        conda install -y -q astropy numpy scipy astroquery scikit-image pytz pyyaml astroscrappy astroalign sep reproject astrometry
        conda install -y -q pytest pytest-astropy pytest-remotedata flaky
    - name: Print versions
      run: |
        conda info
        conda list
    - name: Install astropop
      run: |
        python setup.py build
        pip install -U .
    - name: Run Pytest and generate coverage
      run: |
        pytest --pyargs ./tests ./docs --remote-data --cov astropop --cov-config=./setup.cfg
        coverage xml -o ./coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
