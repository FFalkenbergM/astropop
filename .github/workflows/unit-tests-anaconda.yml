name: Unit Tests

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
  workflow_dispatch:
  schedule:
    - cron: 11 2 * * 0

jobs:
  tests:
    name: ${{ matrix.name }} (${{ matrix.os }}, ${{ matrix.toxenv }})
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[ci skip]'))"
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Documentation build
            python: 3.10
            toxenv: build_docs

          - name: Python 3.10 with devdeps and online catalogs
            python: 3.10
            toxenv: py310-test-devdeps-cat

          - name: Python 3.7 with old deps and online catalogs
            python: 3.7
            toxenv: py37-test-astropylts-numpylts-cat

          - name: Python 3.7 with astrometry (stable)
            python: 3.7
            toxenv: py37-test-numpystable-astropystable

          - name: Python 3.8 with lts deps
            python: 3.8
            toxenv: py38-test-astropylts-numpylts

          - name: Python 3.8 with stable deps
            python: 3.8
            toxenv: py38-test-astropystable-numpystable

          - name: Python 3.9 with stable deps
            python: 3.9
            toxenv: py39-test-astropystable-numpystable

          - name: Python 3.10 with stable deps
            python: 3.10
            toxenv: py310-test-astropystable-numpystable

          #- name: Code style checks
          #  python: 3.8
          #  toxenv: codestyle

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: python -m pip install --upgrade tox
    - name: Install graphviz dependency
      if: "endsWith(matrix.toxenv, 'build_docs')"
      run: sudo apt-get -y install graphviz
    - name: Run tests
      if: "! matrix.coverage"
      run: tox -v -e ${{ matrix.toxenv }}
    - name: Upload coverage to codecov
      if: "matrix.coverage"
      run: |
        tox -v -e ${{ matrix.toxenv }} -- --cov-report=xml:${{ github.workspace }}/coverage.xml
        pip install codecov
        codecov
